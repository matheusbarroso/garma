% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GarmaFit.R, R/GarmaFit-Generic.R
\docType{class}
\name{GarmaFit-class}
\alias{GarmaFit-class}
\alias{GarmaFit,ANY-method}
\alias{print,GarmaFit-method}
\alias{plot,GarmaFit-method}
\alias{summary,GarmaFit-method}
\title{\emph{GARMA} simulation fit class.}
\usage{
\S4method{GarmaFit}{ANY}(garma, ...)

\S4method{print}{GarmaFit}(x)

\S4method{plot}{GarmaFit}(x, scales = "free", ...)

\S4method{summary}{GarmaFit}(object, ...)
}
\arguments{
\item{garma}{An object of the \bold{GarmaSim} class, as provided
by \code{\link{GarmaSim}}.}

\item{\dots}{Further arguments that specify the GarmaFit object,
check the \bold{slots} arguments.}

\item{x}{An object of the GarmaFit class, as provided
by \code{\link{GarmaFit}}.}

\item{scales}{A character specifying if the scales should be free or not.
The default value is \code{"free"} and accepted values are:
\code{'fixed', 'free_x', 'free_y' and 'free'}.}

\item{object}{An object of the GarmaFit class, as provided
by \code{\link{GarmaFit}}.}

\item{x}{An object of the GarmaFit class, as provided
by \code{\link{GarmaFit}}.}
}
\description{
An S4 class to represent a \emph{garma} simulation fitted object.
}
\details{
This S4 class defines the basic structre of a \emph{GARMA}
simulation fitted object.
}
\section{Methods (by generic)}{
\itemize{
\item \code{GarmaFit}: GarmaFit Class constructor.

A method to create an object of the GarmaFit class.

This method creates an object of the GarmaFit class.

\item \code{print}: Print method for a GarmaFit object.

\item \code{plot}: Plot method for a GarmaFit object.

\item \code{summary}: Summary method for a GarmaFit object.
}}

\section{Slots}{

\describe{
\item{\code{garma}}{An object of the \bold{GarmaSim} class, as provided
by \code{\link{GarmaSim}}.}

\item{\code{allow.parallel}}{Logical \bold{TRUE/FALSE} indicating
whether parallel computation via the foreach package
should be used. The default value is \code{TRUE}. OBS:paralllel
 backend must be registered prior to calling \code{\link{GarmaSim}}.}

\item{\code{seed}}{Numeric, the seed to \code{set.seed()} for
replicable examples. Default value is \bold{123}.}

\item{\code{errorhandling}}{Character, either 'try' or 'pass'}

\item{\code{n.try}}{Positive integer. If \code{errorhandling = 'try'},
this specifies the number of attempts in the algorithm.}

\item{\code{control}}{List. This is passed to the garmaFit2 function. The options
are given by  \code{\link[gamlss.util]{garmaFit}}.}

\item{\code{print.out}}{A matrix with values to be used by \code{print}.
The column represents a simulation (\code{nmonte}) and the rows
the estimated parameters.}

\item{\code{plot.out}}{A list with two elements: \describe{
  \item{db}{A data frame with columns: parameter,
  value and label (grouping variable used for some plots) 
  If \code{nmonte = 1} there is also variable column. Each row
  represents a statistic computed for a given block length, 
  \code{nmonte} and parameter.} 
  \item{db2}{A data frame with columns parameter, variable, 
  value and label and rows the model parameters. The values 
  are the simulated parameter values or parameter true-values.}
} with values to be used by \code{plot}.}

\item{\code{value}}{A list, where each element is a fitted
\emph{GARMA} object.}
}}

\examples{
##Some Specs/Simulations for different outputs:
Sim1 <- GarmaSim(
GarmaSpec("GA",
phi = 0.5,
beta.x = 1,
sigma2 =2,
X = as.matrix(
 data.frame(
   x1 = rep(10,101)))), 
nmonte = 10, burnin = 0)

Sim2 <- GarmaSim(
GarmaSpec("GA",
phi = 0.5,
beta.x = 1,
sigma2 =2,
X = as.matrix(
 data.frame(
   x1 = rep(10,101)))), 
nmonte = 1, burnin = 0)


Sim3 <- GarmaSim(
GarmaSpec("PO",
phi = 0.2,
theta = c(0.1, 0.3, 0.5),
mu0 = 1:3), 
nmonte = 10, burnin = 0)


Sim4 <- GarmaSim(
GarmaSpec("PO",
phi = c(0.5,0.15)
beta.x = c(1,1),
X = as.matrix(
 data.frame(
 intercept = rep(1,1102),
   x1 = c(rep(7,100),
       rep(2,1002))))), 
nmonte = 10)

Sim5 <- GarmaSim(
GarmaSpec("PO",
beta.x = c(0.1,1),
X = as.matrix(
 data.frame(
 intercept = rep(1,1100),
   x1 = c(rep(7,100),
       rep(2,1000))))), 
nmonte = 1)

##Example of the GarmaFit methods:

ex1 <- GarmaFit(Sim1,errorhandling="try"))
print(fit.ex1)
plot(fit.ex1)
summary(fit.ex1)

ex2 <- GarmaFit(Sim2)
print(fit.ex2)
plot(fit.ex2)
summary(fit.ex2)

ex3 <- GarmaFit(Sim3)
print(fit.ex3)
plot(fit.ex3)
summary(fit.ex3)

ex4 <- GarmaFit(Sim4)
print(fit.ex4)
plot(fit.ex4)
summary(fit.ex4)

ex5 <- GarmaFit(Sim5)
print(fit.ex5)
plot(fit.ex5)
summary(fit.ex5)

}
\author{
Matheus de Vasconcellos Barroso
}
